version: '3.8'

services:
  # Redis メインサーバー
  redis:
    image: redis:7-alpine
    container_name: tokenbucket-redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - TZ=Asia/Tokyo
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - tokenbucket-network

  # Redis Commander (Web管理ツール)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: tokenbucket-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tokenbucket-network

  # RedisInsight (Redis公式GUIツール)
  # redisinsight:
  #   image: redislabs/redisinsight:latest
  #   container_name: tokenbucket-redisinsight
  #   ports:
  #     - "8001:8001"
  #   environment:
  #     - REDIS_INSIGHT_LOG_DIR=/tmp/logs
  #     - REDIS_INSIGHT_DATA_DIR=/tmp/data
  #   volumes:
  #     - ./redisinsight_data:/tmp/data
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #   restart: unless-stopped
  #   networks:
  #     - tokenbucket-network

  # Redis Exporter (Prometheus用メトリクス)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: tokenbucket-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tokenbucket-network

  # Prism - モックAPIサービス（軽量API）
  prism-light:
    image: stoplight/prism:4
    container_name: tokenbucket-prism-light
    ports:
      - "8082:4010"
    command: mock --host 0.0.0.0 --port 4010 /app/openapi/light-api.yml --dynamic
    environment:
      - PRISM_DYNAMIC_MODE=true
    volumes:
      - ./openapi:/app/openapi:ro
    restart: unless-stopped
    networks:
      - tokenbucket-network


  # HTTPBin - 汎用HTTPテストサービス
  httpbin:
    image: kennethreitz/httpbin:latest
    container_name: tokenbucket-httpbin
    ports:
      - "8086:80"
    restart: unless-stopped
    networks:
      - tokenbucket-network


  app:
    image: local/tokenbucket
    container_name: tokenbucket-app
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - TZ=Asia/Tokyo
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - tokenbucket-network

volumes:
  redisinsight_data:
    driver: local

networks:
  tokenbucket-network:
    driver: bridge
    name: tokenbucket-network 